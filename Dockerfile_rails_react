FROM ninja79/rails
LABEL maintainer="ninja79@github.com"
# Install apt based dependencies required to run Rails as
# well as RubyGems. As the Ruby image itself is based on a
# Debian image, we use apt-get to install those.

#Install Python2, needed for webpacker install
RUN apt-get update && apt-get install -y python2

# Configure the main working directory. This is the base
# directory used in any further RUN, COPY, and ENTRYPOINT
# commands.
RUN mkdir -p /app
WORKDIR /app


#Install bootstrap with YARN
#RUN yarn add bootstrap@4.4.1 jquery@1.9.1 @popperjs/core
#RUN yarn add bootstrap jquery popper.js

# Copy the Gemfile as well as the Gemfile.lock and install
# the RubyGems. This is a separate step so the dependencies
# will be cached unless changes to one of those two files
# are made.

COPY Gemfile Gemfile.lock ./

RUN gem install bundler && bundle install --jobs 20 --retry 5

# Copy the main application.
#COPY . ./

#Perform webpacker installation and other stuff
RUN rails webpacker:install
RUN yarn install --check-files
RUN yarn add react-router-dom
RUN yarn add axios
RUN yarn add styled-components
RUN yarn add font-awesome

#Upgrade db version if any upgrade occurred
#RUN bundle exec rake db:migrate RAILS_ENV=development 
###RUN bundle exec rake db:migrate RAILS_ENV=development 


# Expose port 9000 to the Docker host, so we can access it
# from the outside.
##EXPOSE 9000
# The main command to run when the container starts. Also
# tell the Rails dev server to bind to all interfaces by
# default.
#CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0", "-p", "9000"]
CMD ["/bin/bash"]

#docker build -t airlines .
#docker build -t ninja79/rails-react:v6 -f Dockerfile_rails_react .
#docker run -itP -v $(pwd):/app -p 9000:9000 airlines
#docker exec -it $(docker ps -q) /bin/bash

#Remember to tag vX as latest
#docker login && docker push ninja79/rails-react:v6 && docker push ninja79/rails-react:latest && docker logout
